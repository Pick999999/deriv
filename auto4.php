<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="refresh" content="60" id="refreshMeta">
    <title>Auto Refresh - iPad 2</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background: #f0f0f0;
            font-size: 18px;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .refresh-info {
            background: #e8f5e8;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
            border-left: 4px solid #4CAF50;
        }
        .time-info {
            background: #e3f2fd;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
            border-left: 4px solid #2196F3;
        }
        .control-panel {
            background: #fff3e0;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
            text-align: center;
        }
        .pause-btn {
            background: #ff9800;
            color: white;
            border: none;
            padding: 15px 30px;
            font-size: 18px;
            border-radius: 5px;
            cursor: pointer;
            margin: 10px;
        }
        .pause-btn:hover {
            background: #f57c00;
        }
        .pause-btn.paused {
            background: #4CAF50;
        }
        .status {
            font-weight: bold;
            margin: 10px 0;
        }
        .timer {
            font-size: 24px;
            font-weight: bold;
            color: #2196F3;
            text-align: center;
            margin: 20px 0;
        }
        .content {
            line-height: 1.6;
        }
        .last-update {
            color: #666;
            font-size: 14px;
            text-align: center;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="refresh-info">
            ‚úÖ ‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞ refresh ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏∏‡∏Å 3 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà 59
            <div><strong>üîä ‡πÄ‡∏™‡∏µ‡∏¢‡∏á:</strong> ‡∏à‡∏∞‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á beep ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à</div>
        </div>
        
        <div class="time-info">
            <div><strong>‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô:</strong> <span id="startTime"></span></div>
            <div><strong>üîÑ Refresh ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ:</strong> <span id="nextRefresh"></span></div>
        </div>
        
        <div class="control-panel">
            <div class="status" id="status">üü¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</div>
            <button class="pause-btn" id="pauseBtn" onclick="togglePause()">‚è∏Ô∏è ‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å</button>
        </div>
        
        <div class="timer" id="countdown">60</div>
        
        <div class="content">
            <h2>üîÑ Auto Refresh Page ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö iPad 2</h2>
            
            <p>‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏°‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö iPad 2 ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞:</p>
            
            <ul>
                <li>‡πÉ‡∏ä‡πâ meta refresh tag (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏∂‡πà‡∏á JavaScript)</li>
                <li>Font ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢</li>
                <li>Layout ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ iPad</li>
                <li>‡∏°‡∏µ countdown timer ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤</li>
            </ul>
            
            <p><strong>‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:</strong></p>
            <ol>
                <li>‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡πÉ‡∏ô Safari ‡∏ö‡∏ô iPad</li>
                <li>‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏∞ refresh ‡∏ó‡∏∏‡∏Å 60 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ</li>
                <li>‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</li>
            </ol>
            
            <div style="background: #fff3cd; padding: 15px; border-radius: 5px; margin: 20px 0;">
                <strong>üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö:</strong> ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ refresh ‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô content="60" ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
            </div>
        </div>
        
        <div class="last-update">
            Last updated: <span id="currentTime"></span>
        </div>
    </div>

    <script>
        // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°
        var countdownElement = document.getElementById('countdown');
        var timeElement = document.getElementById('currentTime');
        var startTimeElement = document.getElementById('startTime');
        var nextRefreshElement = document.getElementById('nextRefresh');
        var statusElement = document.getElementById('status');
        var pauseBtn = document.getElementById('pauseBtn');
        var refreshMeta = document.getElementById('refreshMeta');
        
        var refreshIntervalMinutes = 3; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏∑‡πà‡∏ô
        var seconds = 0;
        var isPaused = false;
        var startTime = new Date();
        var nextRefreshTime;
        var countdownInterval;
        
        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤ refresh ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà 00
        function calculateNextRefreshTime() {
            var now = new Date();
            var currentMinutes = now.getMinutes();
            var currentSeconds = now.getSeconds();
            
            // ‡∏´‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ñ‡∏∂‡∏á‡∏ä‡πà‡∏ß‡∏á refresh ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
            var minutesToWait = refreshIntervalMinutes - (currentMinutes % refreshIntervalMinutes);
            
            // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á refresh ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà 00
            if (minutesToWait === refreshIntervalMinutes && currentSeconds < 59) {
                minutesToWait = 0;
            }
            
            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤ refresh ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ
            var nextRefresh = new Date(now);
            nextRefresh.setMinutes(now.getMinutes() + minutesToWait);
            nextRefresh.setSeconds(59); // ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏´‡πâ refresh ‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà 59
            nextRefresh.setMilliseconds(0);
            
            // ‡∏ñ‡πâ‡∏≤ minutesToWait = 0 ‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà 59
            if (minutesToWait === 0 && currentSeconds < 59) {
                // refresh ‡πÉ‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà 59 ‡∏Ç‡∏≠‡∏á‡∏ô‡∏≤‡∏ó‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
                nextRefresh.setMinutes(now.getMinutes());
            }
            
            return nextRefresh;
        }
        
        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        function calculateSecondsLeft() {
            var now = new Date();
            var timeDiff = Math.floor((nextRefreshTime - now) / 1000);
            return Math.max(0, timeDiff);
        }
        
        // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        function updateTime() {
            var now = new Date();
            timeElement.textContent = now.toLocaleString('th-TH');
        }
        
        // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ refresh ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ
        function updateTimeInfo() {
            startTimeElement.textContent = startTime.toLocaleString('th-TH');
            nextRefreshElement.textContent = nextRefreshTime.toLocaleString('th-TH');
        }
        
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó meta refresh tag
        function updateMetaRefresh() {
            if (!isPaused) {
                var secondsLeft = calculateSecondsLeft();
                if (secondsLeft <= 1) {
                    refreshMeta.setAttribute('content', '1');
                } else {
                    refreshMeta.setAttribute('content', secondsLeft.toString());
                }
            }
        }
        
        // Countdown timer
        function countdown() {
            if (isPaused) {
                countdownElement.textContent = '‚è∏Ô∏è ‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å';
                return;
            }
            
            seconds = calculateSecondsLeft();
            
            if (seconds <= 0) {
                countdownElement.textContent = '‡∏Å‡∏≥‡∏•‡∏±‡∏á refresh...';
                location.reload(); // Force refresh
                return;
            }
            
            var minutes = Math.floor(seconds / 60);
            var remainingSeconds = seconds % 60;
            
            if (minutes > 0) {
                countdownElement.textContent = minutes + ' ‡∏ô‡∏≤‡∏ó‡∏µ ' + remainingSeconds + ' ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ';
            } else {
                countdownElement.textContent = remainingSeconds + ' ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ';
            }
            
            updateMetaRefresh();
        }
        
        // ‡πÄ‡∏£‡∏¥‡πà‡∏° countdown
        function startCountdown() {
            countdownInterval = setInterval(countdown, 1000);
        }
        
        // ‡∏´‡∏¢‡∏∏‡∏î countdown
        function stopCountdown() {
            clearInterval(countdownInterval);
        }
        
        // ‡∏™‡∏•‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ pause/resume
        function togglePause() {
            isPaused = !isPaused;
            
            if (isPaused) {
                // ‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å
                stopCountdown();
                refreshMeta.setAttribute('content', '999999'); // ‡∏´‡∏¢‡∏∏‡∏î auto refresh
                statusElement.textContent = 'üî¥ ‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å';
                pauseBtn.textContent = '‚ñ∂Ô∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà';
                pauseBtn.className = 'pause-btn paused';
            } else {
                // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
                nextRefreshTime = calculateNextRefreshTime();
                updateTimeInfo();
                startCountdown();
                statusElement.textContent = 'üü¢ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô';
                pauseBtn.textContent = '‚è∏Ô∏è ‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å';
                pauseBtn.className = 'pause-btn';
            }
        }
        
        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á
        function init() {
            nextRefreshTime = calculateNextRefreshTime();
            updateTime();
            updateTimeInfo();
            startCountdown();
            
            // ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á beep ‡πÄ‡∏°‡∏∑‡πà‡∏≠ load ‡πÄ‡∏™‡∏£‡πá‡∏à
            playBeepSound();
			playBeepSound();
			playBeepSound();
			playBeepSound();
			playBeepSound();
            
            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏∏‡∏Å‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
            setInterval(updateTime, 1000);
        }
        
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á beep ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö iPad 2
        function playBeepSound() {
            try {
                // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ Web Audio API (‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô iPad 2)
                if (typeof AudioContext !== 'undefined' || typeof webkitAudioContext !== 'undefined') {
                    var audioContext = new (window.AudioContext || window.webkitAudioContext)();
                    var oscillator = audioContext.createOscillator();
                    var gainNode = audioContext.createGain();
                    
                    oscillator.connect(gainNode);
                    gainNode.connect(audioContext.destination);
                    
                    oscillator.frequency.value = 800; // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏á
                    gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);
                    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.1);
                    
                    oscillator.start(audioContext.currentTime);
                    oscillator.stop(audioContext.currentTime + 0.1);
                } else {
                    // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏ä‡πâ HTML5 Audio (backup)
                    playBeepHTML5();
                }
            } catch (e) {
                // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 3: ‡πÉ‡∏ä‡πâ Data URI Audio (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö iPad 2)
                playBeepDataURI();
            }
        }
        
        // ‡πÄ‡∏™‡∏µ‡∏¢‡∏á beep ‡∏î‡πâ‡∏ß‡∏¢ HTML5 Audio
        function playBeepHTML5() {
            try {
                var audio = new Audio();
                audio.preload = 'auto';
                audio.src = 'data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmEiCi2B0fPQeykGNYDL7NCQQQkdZrnq65hNEAo+ltryxHkpBSFzxu3fjEQKFGS57/OfVRMKTKXh87dpHgU2jdnzy3gsBSJ+xe/bkEELHWq+7eaTTBELRp7f9bhoHgg2k9n2zHkrBCZ7x+zekEILHGa76/ShUhIKTanj97hpHgk2jNz4zXcrBCF6xO7dmEELG2q+6+2PUBIMRp3f9bpmHgg3k9n31XktBSh4xe/fkEALH2m96uuVUBEKSzUWIJBlGARFjEobaTFPAhRIjUgdZy1MBBRV4B4hOFUCElPDGR9TxWghOlwBE1fkHx5YqWgaRmAACEXgLSdZFAAfVr8LF1HY1oMHOGnKCBxzuGkdVnMbEn3RBA8hYR0LHWzAChZp3ZkJO2vNDSpJAAJNNjPeU1T8GRBGpF0EI' ;
                audio.play();
            } catch (e) {
                // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡πá‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£
                console.log('Cannot play HTML5 audio');
            }
        }
        
        // ‡πÄ‡∏™‡∏µ‡∏¢‡∏á beep ‡∏î‡πâ‡∏ß‡∏¢ Data URI (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö iPad 2)
        function playBeepDataURI() {
            try {
                var audio = document.createElement('audio');
                audio.preload = 'auto';
                audio.volume = 0.5;
                // ‡πÄ‡∏™‡∏µ‡∏¢‡∏á beep ‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà 800Hz
                audio.src = 'data:audio/wav;base64,UklGRjIAAABXQVZFZm10IBAAAAABAAEARKwAAIhYAQACABAAZGF0YQ4AAAC2tbW1tbW1tbW1tbW1';
                
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° audio element ‡∏•‡∏á‡πÉ‡∏ô DOM ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
                document.body.appendChild(audio);
                
                audio.play().then(function() {
                    // ‡∏•‡∏ö element ‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à
                    setTimeout(function() {
                        document.body.removeChild(audio);
                    }, 1000);
                }).catch(function(e) {
                    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡πá‡∏•‡∏ö element
                    document.body.removeChild(audio);
                    console.log('Beep sound failed');
                });
                
            } catch (e) {
                console.log('Data URI audio failed');
            }
        }
        
        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à
        init();
    </script>
</body>
</html>