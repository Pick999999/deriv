class NetworkMonitor {
    constructor() {
        this.isOnline = navigator.onLine;
        this.lastPingTime = 0;
        this.signalStrength = 0;

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á UI elements
        this.createUI();

        // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listeners
        window.addEventListener('online', () => this.handleOnline());
        window.addEventListener('offline', () => this.handleOffline());

        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß
        this.startSpeedTest();
    }

    createUI() {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á container
        this.container = document.createElement('div');
        this.container.style.cssText = `
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.15);
            font-family: Arial, sans-serif;
            min-width: 280px;
        `;

        // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
        this.statusElement = document.createElement('div');
        this.statusElement.style.cssText = `
            font-size: 18px;
            margin-bottom: 15px;
            font-weight: bold;
        `;
        this.container.appendChild(this.statusElement);

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á container ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ñ‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì
        this.signalContainer = document.createElement('div');
        this.signalContainer.style.cssText = `
            display: flex;
            gap: 5px;
            margin-bottom: 15px;
            height: 40px;
            align-items: flex-end;
        `;

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ñ‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì 4 ‡πÅ‡∏ñ‡∏ö
        this.signalBars = [];
        for (let i = 0; i < 4; i++) {
            const bar = document.createElement('div');
            bar.style.cssText = `
                width: 25px;
                background-color: #ddd;
                border-radius: 4px;
                transition: all 0.3s ease;
            `;
            this.signalBars.push(bar);
            this.signalContainer.appendChild(bar);
        }
        this.container.appendChild(this.signalContainer);

        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
        this.speedElement = document.createElement('div');
        this.speedElement.style.cssText = `
            font-size: 16px;
            color: #666;
        `;
        this.container.appendChild(this.speedElement);

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì
        this.signalText = document.createElement('div');
        this.signalText.style.cssText = `
            font-size: 16px;
            margin-top: 10px;
            font-weight: bold;
        `;
        this.container.appendChild(this.signalText);

        document.body.appendChild(this.container);
    }

    handleOnline() {
        this.isOnline = true;
        this.showNotification('‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß! üéâ');
        this.updateUI();
    }

    handleOffline() {
        this.isOnline = false;
        this.showNotification('‡∏Ç‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï! ‚ö†Ô∏è');
        this.updateUI();
    }

    showNotification(message) {
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${this.isOnline ? '#4CAF50' : '#f44336'};
            color: white;
            padding: 15px 25px;
            border-radius: 8px;
            font-size: 16px;
            font-weight: bold;
            animation: slideIn 0.5s ease-out;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        `;
        notification.textContent = message;

        document.body.appendChild(notification);

        setTimeout(() => {
            notification.style.animation = 'slideOut 0.5s ease-in';
            setTimeout(() => notification.remove(), 500);
        }, 3000);
    }

    async startSpeedTest() {
        while (true) {
            if (this.isOnline) {
                const startTime = performance.now();
                try {
                    const response = await fetch('https://www.google.com/favicon.ico', {
                        mode: 'no-cors',
                        cache: 'no-cache'
                    });

                    const endTime = performance.now();
                    const pingTime = endTime - startTime;

                    this.calculateSignalStrength(pingTime);
                    this.lastPingTime = pingTime;

                } catch (error) {
                    this.signalStrength = 0;
                }
            }

            this.updateUI();
            await new Promise(resolve => setTimeout(resolve, 5000));
        }
    }

    calculateSignalStrength(pingTime) {
        if (pingTime < 100) {
            this.signalStrength = 4; // ‡∏î‡∏µ‡∏°‡∏≤‡∏Å
        } else if (pingTime < 200) {
            this.signalStrength = 3; // ‡∏î‡∏µ
        } else if (pingTime < 400) {
            this.signalStrength = 2; // ‡∏û‡∏≠‡πÉ‡∏ä‡πâ
        } else {
            this.signalStrength = 1; // ‡πÅ‡∏¢‡πà
        }
    }

    getSignalText(strength) {
        switch(strength) {
            case 4: return { text: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏î‡∏µ‡∏°‡∏≤‡∏Å', color: '#4CAF50' };
            case 3: return { text: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏î‡∏µ', color: '#8BC34A' };
            case 2: return { text: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏û‡∏≠‡πÉ‡∏ä‡πâ', color: '#FFC107' };
            case 1: return { text: '‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏≠‡πà‡∏≠‡∏ô', color: '#FF5722' };
            default: return { text: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì', color: '#9E9E9E' };
        }
    }

    updateUI() {
        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
        this.statusElement.textContent = `‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${this.isOnline ? 'üü¢ ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå' : 'üî¥ ‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå'}`;

        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÅ‡∏ñ‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì
        const barHeights = ['40%', '60%', '80%', '100%'];
        this.signalBars.forEach((bar, index) => {
            bar.style.height = barHeights[index];
            bar.style.backgroundColor = index < this.signalStrength ?
                this.getSignalText(this.signalStrength).color : '#ddd';
        });

        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏£‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì
        const signalInfo = this.getSignalText(this.signalStrength);
        this.signalText.textContent = signalInfo.text;
        this.signalText.style.color = signalInfo.color;

        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
        this.speedElement.textContent = `‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß: ${Math.round(this.lastPingTime)} ‡∏°‡∏¥‡∏•‡∏•‡∏¥‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ`;
    }
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á style ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö animations
const style = document.createElement('style');
style.textContent = `
    @keyframes slideIn {
        from { transform: translateX(100%); opacity: 0; }
        to { transform: translateX(0); opacity: 1; }
    }
    @keyframes slideOut {
        from { transform: translateX(0); opacity: 1; }
        to { transform: translateX(100%); opacity: 0; }
    }
`;
document.head.appendChild(style);

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
//const networkMonitor = new NetworkMonitor();